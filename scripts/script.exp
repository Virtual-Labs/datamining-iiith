#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Fri Mar 13 17:29:07 2015
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn $env(SHELL)
match_max 100000
expect -exact "\]0;root $: ~root $:~# "
send -- "sage -c 'notebook(interface=\"\",directory=\"/root/.sage/sage_notebook.sagenb\",port=80,accounts=true)'"
expect -exact "sage -c 'notebook(interface=\"\",directory=\"/root/.sage/sage_notebook.sagenb\",port=80,accounts=true)'"
send -- "\r"
expect -exact "\r
**********************************************************************\r
WARNING: Running the notebook insecurely not on localhost is dangerous\r
because its possible for people to sniff passwords and gain access to\r
your account. Make sure you know what you are doing.\r
**********************************************************************\r
The notebook files are stored in: sage_notebook.sagenb\r
\r
\r
\r
Please choose a new password for the Sage Notebook 'admin' user.\r
Do _not_ choose a stupid password, since anybody who could guess your password\r
and connect to your machine could access or delete your files.\r
NOTE: Only the hash of the password you type is stored by Sage.\r
You can change your password by typing notebook(reset=True).\r
\r
\r
\r
Enter new password: "
send -- "sage123\r"
expect -exact "\r
Retype new password: "
send -- "sage123\r"
expect -exact "\r
Please login to the notebook with the username 'admin' and the above password.\r
User admin created with the password you specified.\r
\r
\r
\r
**********************************************************************\r
\r
\r
**********************************************************************\r
WARNING: Insecure notebook server listening on external interface.\r
Unless you are running this via ssh port forwarding, you are\r
**crazy**!  You should run the notebook with the option secure=True.\r
**********************************************************************\r
┌────────────────────────────────────────────────┐\r
│                                                │\r
│  Open your web browser to http://localhost:81  │\r
│                                                │\r
└────────────────────────────────────────────────┘\r
Executing twistd  --pidfile=\"sage_notebook.sagenb/sagenb.pid\" -ny \"sage_notebook.sagenb/twistedconf.tac\"\r
/usr/lib/sagemath/local/lib/python2.7/site-packages/Crypto/Util/number.py:57: PowmInsecureWarning: Not using mpz_powm_sec.  You should rebuild using libgmp >= 5 to avoid timing attack vulnerability.\r
  _warn(\"Not using mpz_powm_sec.  You should rebuild using libgmp >= 5 to avoid timing attack vulnerability.\", PowmInsecureWarning)\r
2015-03-13 17:29:42+0530 \[-\] Log opened.\r
2015-03-13 17:29:42+0530 \[-\] twistd 13.2.0 (/usr/lib/sagemath/local/bin/python 2.7.5) starting up.\r
2015-03-13 17:29:42+0530 \[-\] reactor class: twisted.internet.epollreactor.EPollReactor.\r
2015-03-13 17:29:42+0530 \[-\] QuietSite starting on 81\r
2015-03-13 17:29:42+0530 \[-\] Starting factory <__builtin__.QuietSite instance at 0x7cd3ab8>\r
http://localhost:81/?startup_token=623e5fb800fdcd0575325de3adc2c8be: No such file or directory\r
"
send -- "\r"
expect -exact "\r
"
send -- "\r"
expect -exact "\r
"
send -- ""
expect -exact "^C2015-03-13 17:30:00+0530 \[-\] Quitting all running worksheets...\r
2015-03-13 17:30:00+0530 \[-\] Saving notebook...\r
2015-03-13 17:30:00+0530 \[-\] Notebook cleanly saved.\r
2015-03-13 17:30:00+0530 \[-\] (TCP Port 81 Closed)\r
2015-03-13 17:30:00+0530 \[-\] Stopping factory <__builtin__.QuietSite instance at 0x7cd3ab8>\r
2015-03-13 17:30:00+0530 \[-\] Main loop terminated.\r
2015-03-13 17:30:00+0530 \[-\] Server Shut Down.\r
\]0;root $: ~root $:~# \[K"
send -- ""
expect eof
